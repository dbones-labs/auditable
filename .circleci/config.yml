version: 2.1

orbs:
  codecov: codecov/codecov@1.1.1

jobs:

  setup:
    docker:
      - image: dboneslabs/git-tools:latest
    steps:
      - checkout
      - run:
          name: version
          command: |
            mkdir semver
            dotnet-gitversion
            dotnet-gitversion | jq '.SemVer' > ./semver/full.txt
            dotnet-gitversion | jq '.NuGetVersionV2' > ./semver/nuget.txt
            dotnet-gitversion | jq '.NuGetPreReleaseTagV2' > ./semver/nuget-sfx.txt
            dotnet-gitversion | jq '.MajorMinorPatch' > ./semver/mmp.txt
            ls
            ls ./semver

      - persist_to_workspace:
          root: .
          paths:
            - src
            - semver

  build:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.1
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: build
          command: |
            
            ls
            ls ./semver
            APP_VERSION=$(cat ./semver/nuget.txt)
            echo $APP_VERSION

            export SEMVER_NUGET_SFX=$(cat ./semver/nuget-sfx.txt)
            echo $SEMVER_NUGET_SFX

            cd src
            ls

            dotnet restore --packages packages
            dotnet build --no-restore --configuration Release --force -p:Version=$APP_VERSION

            mkdir ./../nupkgs
            mv **/bin/**/*.nupkg ./../nupkgs

            cd ./../nupkgs
            rm *.symbols.nupkg
            pwd
            ls

      - persist_to_workspace:
          root: .
          paths:
            - nupkgs
            - src

  test:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.1
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: test
          command: |
            mkdir ./results
            
            cd src
            dotnet test --no-restore --no-build --configuration Release --logger trx --results-directory ../results /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
            find . -type f -name "coverage.opencover.xml" -printf "/%P\n"| while read FILE ; do DIR=$(dirname "$FILE" ); mv ."$FILE" "$PWD"/../results/"$DIR".xml;done;

            cd ../results
            ls

      - persist_to_workspace:
          root: .
          paths:
            - results
            - src
      - store_artifacts:
          path: results

  upload_result:
    docker:
       - image: circleci/php
    steps:
      - attach_workspace:
          at: ./results
      # - run: |
      #     cd results
      #     ls

      #     curl -o codecov.sh  https://codecov.io/bash -k

      #     chmod +x codecov.sh

      #     echo "uploading"
      #     ./codecov.sh  -v -f "*.xml"

      - codecov/upload:
            file: "*.xml"

  publish:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.1
    steps:
      - attach_workspace:
          at: ./
      - run: |

          pwd
          cd nupkgs
          ls
          
          dotnet nuget add source https://nuget.pkg.github.com/dbones-labs/index.json -n github -u dbones -p ${GH_TOKEN} --store-password-in-clear-text
          dotnet nuget push "*.nupkg" --source "github"
                  
workflows:
  version: 2
  build_and_publish:
    jobs:
      - setup:
          filters:
            branches:
              ignore:
                - docs
      - build:
          requires:
            - setup
      - test:
          requires:
            - build
      - upload_result:
          context: build-ctx
          requires:
            - test
          # filters:
          #   branches:
          #     only: master
      - publish:
          context: build-ctx
          requires:
            - test